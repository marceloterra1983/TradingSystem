version: '3.8'

services:
  workspace:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: workspace-service
    ports:
      - "3200:3200"
    environment:
      - NODE_ENV=development
      - WORKSPACE_PORT=3200
      - LOG_LEVEL=info

      # TimescaleDB connection (using project root .env)
      - TIMESCALEDB_HOST=${TIMESCALEDB_HOST:-timescaledb}
      - TIMESCALEDB_PORT=${TIMESCALEDB_PORT:-5432}
      - TIMESCALEDB_DATABASE=${TIMESCALEDB_DATABASE:-APPS-TPCAPITAL}
      - TIMESCALEDB_USER=${TIMESCALEDB_USER:-timescale}
      - TIMESCALEDB_PASSWORD=${TIMESCALEDB_PASSWORD}

      # Database strategy (TimescaleDB only)
      - LIBRARY_DB_STRATEGY=timescaledb

    volumes:
      # Mount source code for hot-reload
      - ./src:/app/src:ro
      - ./scripts:/app/scripts:ro

      # Anonymous volume for node_modules (prevents overwrite)
      - /app/node_modules

    networks:
      - tradingsystem-network

    depends_on:
      timescaledb:
        condition: service_healthy

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3200/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1) })"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # TimescaleDB (shared with TP Capital)
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: tradingsystem-timescaledb
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${TIMESCALEDB_USER:-timescale}
      - POSTGRES_PASSWORD=${TIMESCALEDB_PASSWORD}
      - POSTGRES_DB=${TIMESCALEDB_DATABASE:-APPS-TPCAPITAL}

    volumes:
      - timescaledb-data:/var/lib/postgresql/data

    networks:
      - tradingsystem-network

    restart: unless-stopped

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TIMESCALEDB_USER:-timescale}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  tradingsystem-network:
    name: tradingsystem-network
    external: true  # Use existing network from infrastructure stack

volumes:
  timescaledb-data:
    name: tradingsystem-timescaledb-data
