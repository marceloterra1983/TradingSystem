@startuml
title Idea Bank - Create Idea Flow

actor Developer
participant "Dashboard UI\n(React)" as UI
participant "Idea Bank API\n(Express :3200)" as API
participant "Validation\nMiddleware" as Validation
participant "LowDB\n(ideas.json)" as LowDB
participant "Pino\nLogger" as Logger
participant "Prometheus\nMetrics" as Metrics

== User Interaction ==
Developer -> UI : Click "Add Idea" button
activate UI
UI -> UI : Show modal/form
UI --> Developer : Display form

Developer -> UI : Fill form\n(title, description, category, priority, tags)
Developer -> UI : Click Submit
UI -> UI : Client-side validation\n(required fields)

== API Request ==
UI -> API : POST /api/items\n{title, description, category, priority, tags}
activate API

API -> Validation : express-validator checks
activate Validation

Validation -> Validation : Validate required fields
Validation -> Validation : Validate enums\n(category, priority)
Validation -> Validation : Check title length (<200 chars)

alt Validation passes
  Validation --> API : Valid payload
  deactivate Validation
  
  == Persistence ==
  API -> API : Generate ID (UUID)
  API -> API : Set defaults\n(status: "new", createdAt: now())
  API -> LowDB : db.data.ideas.push(newIdea)
  activate LowDB
  
  LowDB -> LowDB : Atomic write to ideas.json
  LowDB --> API : Write confirmation
  deactivate LowDB
  
  == Observability ==
  API -> Logger : Log "Idea created"\n{id, title, category}
  activate Logger
  Logger -> Logger : Write structured JSON
  deactivate Logger
  
  API -> Metrics : Increment ideas_created_total
  activate Metrics
  Metrics -> Metrics : Update counter
  deactivate Metrics
  
  == Success Response ==
  API --> UI : 201 Created\n{id, title, description, ...}
  deactivate API
  
  UI -> UI : Update React Query cache
  UI -> UI : Show success toast
  UI -> UI : Close modal
  UI --> Developer : Display success message
  deactivate UI

else Validation fails
  Validation --> API : 400 Bad Request\n{errors: [{field, message}]}
  deactivate Validation
  
  API --> UI : 400 Bad Request\n{errors: [...]}
  deactivate API
  
  UI -> UI : Display validation errors inline
  UI --> Developer : Show error messages
  deactivate UI
  
  note right of Developer
    Developer fixes errors
    and resubmits
  end note
end

== Alternative Flow: Server Error ==
alt LowDB write failure
  LowDB --> API : Error (disk full, permissions, etc.)
  
  API -> Logger : Log error with stack trace
  API -> Metrics : Increment ideas_errors_total
  API --> UI : 500 Internal Server Error\n{error: "Failed to create idea"}
  
  UI -> UI : Display generic error message
  UI --> Developer : Show error notification
  
  note right of Developer
    User retries or contacts support
  end note
end

note over API, Metrics
  **Performance Target**
  < 200ms p95 for create operation
  Measured via Prometheus histogram
end note

note over UI, API
  **Default Values**
  - status: "new" (auto-assigned)
  - createdAt: Current timestamp
  - updatedAt: Same as createdAt
  - id: UUID v4 generated
end note

note over UI
  **React Query Optimistic Updates**
  Can be enabled for instant UI feedback:
  - Add idea to cache before API responds
  - Rollback on error
  - Requires more complex error handling
end note

@enduml
