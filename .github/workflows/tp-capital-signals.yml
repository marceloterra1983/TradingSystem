name: TP-Capital CI

on:
  push:
    branches: [main]
    paths:
      - frontend/apps/tp-capital/**
      - frontend/apps/tp-capital/infrastructure/**
      - .github/workflows/tp-capital-signals.yml
  pull_request:
    paths:
      - frontend/apps/tp-capital/**
      - frontend/apps/tp-capital/infrastructure/**
      - .github/workflows/tp-capital-signals.yml

env:
  SERVICE_DIR: frontend/apps/tp-capital
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/tp-capital-signals

jobs:
  freeze_guard:
    name: Freeze Guard
    runs-on: ubuntu-latest
    outputs:
      active: ${{ steps.detect.outputs.active }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - id: detect
        name: Detect freeze status
        shell: bash
        run: |
          status_line=$(grep -i '^\*\*Status' FREEZE-NOTICE.md 2>/dev/null | head -n1 | tr -d '\r')
          if echo "$status_line" | grep -qiE 'ACTIVE|IN PROGRESS|ONGOING|PHASE'; then
            echo "active=true" >> "$GITHUB_OUTPUT"
            echo "Freeze active: $status_line"
          else
            echo "active=false" >> "$GITHUB_OUTPUT"
            echo "No active freeze detected."
          fi

  lint:
    runs-on: ubuntu-latest
    needs: freeze_guard
    if: ${{ needs.freeze_guard.outputs.active != 'true' }}
    defaults:
      run:
        working-directory: ${{ env.SERVICE_DIR }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npm run lint

  build-and-push:
    needs: [freeze_guard, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/main' && needs.freeze_guard.outputs.active != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_DIR }}
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:latest
