{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:promise/recommended"  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": ["./tsconfig.json", "./tsconfig.node.json"]
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "promise"  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    // React Hooks Rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // Promise/Async Rules (catches the issues you're seeing)
    "promise/always-return": "warn",
    "promise/catch-or-return": "error",
    "promise/no-return-wrap": "warn",
    "promise/param-names": "error",
    "promise/no-nesting": "warn",
    "promise/no-promise-in-callback": "warn",
    "promise/no-callback-in-promise": "warn",
    "promise/no-new-statics": "error",
    "promise/valid-params": "warn",

    // TypeScript Rules
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-unused-vars": ["warn", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_"
    }],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "warn",

    // React Rules
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/display-name": "off",

    // General Rules
    "no-console": ["warn", { "allow": ["warn", "error", "info"] }],
    "no-unused-vars": "off",
    "prefer-const": "warn",
    "no-var": "error"  },
  "ignorePatterns": [
    "node_modules/",
    "dist/",
    "build/",
    "*.config.js",
    "vite.config.ts",
    "vitest.config.ts",
    "cypress/",
    "src/examples/",
    "src/__tests__/"
  ]}
