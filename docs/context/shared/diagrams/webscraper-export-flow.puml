@startuml
title WebScraper Export Flow

actor User
participant "ExportsPage\n(Web)" as Web
participant "ExportDialog\n(UI)" as Dialog
participant "WebScraper API\n(ExportsController)" as API
participant "ExportService" as Service
database "TimescaleDB" as DB
database "Filesystem\n(Export Dir)" as FS
database "QuestDB\n(optional)" as Quest

== Create Export ==
User -> Web: Open Exports page
Web -> Dialog: Open export wizard
User -> Dialog: Configure type, formats, filters
Dialog -> API: POST /api/v1/exports
API -> DB: INSERT export_jobs (status=pending)
DB --> API: export_id
API -> Service: generateExport(export_id) [async]
API --> Dialog: 202 Accepted
Dialog --> User: Toast "Export started"

== Background Generation ==
Service -> DB: SELECT export_job
Service -> Service: Determine dataset (jobs/templates/schedules)
Service -> DB: Stream records (respect MAX_ROWS)
Service -> FS: Write CSV/JSON/Parquet files
Service -> FS: Optional ZIP archive
Service -> DB: UPDATE export_jobs\n(status=completed, file_paths, row_count, file_size)
Service -> Quest: INSERT metadata (when enabled)

== Download ==
User -> Web: Click download
Web -> API: GET /api/v1/exports/:id/download/:format
API -> FS: Read file stream
FS --> API: File contents
API --> Web: Stream response
Web --> User: Browser download prompt

== Cleanup ==
Service -> DB: SELECT export_jobs\nWHERE status='completed' AND expires_at < NOW()
loop expired_exports
  Service -> FS: Delete export files + directory
  Service -> DB: DELETE FROM export_jobs
end
Service --> Service: Log cleanup summary

@enduml
