# DEPRECATED: This file is kept for backward compatibility only.
# Canonical spec: ./specs/workspace.openapi.yaml
# Last updated: 2025-10-18

openapi: 3.0.3
info:
  title: TradingSystem Idea Bank API
  version: 1.0.0
  description: |
    REST API that powers the Idea Bank experience in the TradingSystem dashboard.
    Persisted via LowDB JSON files (MVP). All responses follow a `{ success: boolean, ... }` envelope.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
x-deprecated: true
x-deprecation-message: |
  This specification file is deprecated. Please use the canonical version at:
  docs/context/backend/api/specs/workspace.openapi.yaml
  
  This file will be removed in a future version.
servers:
  - url: http://localhost:3200
    description: Local development
paths:
  /api/items:
    get:
      summary: List ideas
      operationId: listIdeas
      tags: [Ideas]
      responses:
        '200':
          description: Ideas retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdeaListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      summary: Create idea
      operationId: createIdea
      tags: [Ideas]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdeaCreateRequest'
      responses:
        '201':
          description: Idea created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdeaMutationResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/items/{id}:
    put:
      summary: Update idea
      operationId: updateIdea
      tags: [Ideas]
      parameters:
        - $ref: '#/components/parameters/IdeaId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdeaUpdateRequest'
      responses:
        '200':
          description: Idea updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdeaMutationResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      summary: Delete idea
      operationId: deleteIdea
      tags: [Ideas]
      parameters:
        - $ref: '#/components/parameters/IdeaId'
      responses:
        '200':
          description: Idea deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdeaMutationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/prds/{language}:
    get:
      summary: List PRD files
      operationId: listPrds
      tags: [PRDs]
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
            enum: [pt, en]
          description: Language of PRD documents to list
      responses:
        '200':
          description: PRD files retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrdListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /health:
    get:
      summary: Health check
      operationId: health
      tags: [Health]
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  service:
                    type: string
                    example: idea-bank-api
        '429':
          description: Too many requests to health endpoint
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: rate limit exceeded
components:
  parameters:
    IdeaId:
      name: id
      in: path
      required: true
      description: Numeric identifier of the idea (stored as string)
      schema:
        type: string
  schemas:
    Idea:
      type: object
      required: [id, title, description, category, priority, status, tags, createdAt]
      properties:
        id:
          type: string
          description: Auto-incrementing identifier represented as string
          example: "12"
        title:
          type: string
          example: Implement advanced filtering
        description:
          type: string
        category:
          type: string
          enum: [documentacao, coleta-dados, banco-dados, analise-dados, gestao-riscos, dashboard]
        priority:
          type: string
          enum: [low, medium, high, critical]
        status:
          type: string
          enum: [new, review, in-progress, completed, rejected]
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
    IdeaListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        count:
          type: integer
          minimum: 0
        data:
          type: array
          items:
            $ref: '#/components/schemas/Idea'
    IdeaCreateRequest:
      type: object
      required: [title, description, category, priority]
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum: [documentacao, coleta-dados, banco-dados, analise-dados, gestao-riscos, dashboard]
        priority:
          type: string
          enum: [low, medium, high, critical]
        tags:
          type: array
          items:
            type: string
    IdeaUpdateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum: [documentacao, coleta-dados, banco-dados, analise-dados, gestao-riscos, dashboard]
        priority:
          type: string
          enum: [low, medium, high, critical]
        status:
          type: string
          enum: [new, review, in-progress, completed, rejected]
        tags:
          type: array
          items:
            type: string
    IdeaMutationResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/Idea'
    PrdFile:
      type: object
      properties:
        id:
          type: string
        fileName:
          type: string
        name:
          type: string
        size:
          type: integer
          format: int64
        modifiedAt:
          type: string
          format: date-time
        path:
          type: string
    PrdListResponse:
      type: object
      properties:
        success:
          type: boolean
        language:
          type: string
          enum: [pt, en]
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/PrdFile'
  responses:
    ValidationError:
      description: Request failed validation
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: object
                  properties:
                    msg:
                      type: string
                    param:
                      type: string
                    location:
                      type: string
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: Idea not found
    InternalError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
