openapi: 3.1.0
info:
  title: TradingSystem Library API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  description: |
    OpenAPI specification for the Library (Idea Bank) API.
    The service provides CRUD operations for idea items stored in QuestDB and LowDB,
    health checks, and Prometheus-compatible metrics. Supports dual-strategy persistence
    with automatic fallback and migration capabilities.

    Global rate limiting: 300 requests per 60s window (express-rate-limit). Endpoints may return 429 Too Many Requests and include standard rate limit headers (RateLimit-Limit, RateLimit-Remaining, RateLimit-Reset). See x-rate-limit vendor extensions where provided.
  contact:
    name: TradingSystem Docs & Ops Guild
servers:
  - url: http://localhost:3200
    description: Port 3200 - Library API (Ideas & Docs) - Local development
  - url: http://tradingsystem.local/api/workspace
    description: Routed through reverse proxy
paths:
  /health:
    get:
      summary: Health check
      description: Returns service and QuestDB connectivity status.
      tags: [Health]
      x-rate-limit:
        window: 15m
        max: 300
      responses:
        '200':
          description: Service is running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /metrics:
    get:
      summary: Prometheus metrics
      description: Exposes process, HTTP, and QuestDB metrics in Prometheus text format.
      tags: [Observability]
      responses:
        '200':
          description: Metrics payload
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # HELP tradingsystem_http_requests_total Total HTTP requests
                  # TYPE tradingsystem_http_requests_total counter
                  tradingsystem_http_requests_total{method="GET",status="200"} 42
  /api/items:
    get:
      summary: List items
      description: Returns all idea items ordered by creation date (descending).
      tags: [Items]
      responses:
        '200':
          description: List of items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemsResponse'
    post:
      summary: Create item
      description: Creates a new idea item in QuestDB (or LowDB fallback).
      tags: [Items]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemRequest'
      responses:
        '201':
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutateItemResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/items/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Item identifier
        schema:
          type: string
    put:
      summary: Update item
      description: Updates title, description, category, priority, status or tags for an existing item.
      tags: [Items]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemRequest'
      responses:
        '200':
          description: Item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutateItemResponse'
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete item
      description: Permanently removes an item from the catalog.
      tags: [Items]
      responses:
        '200':
          description: Item deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteItemResponse'
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: healthy
        service:
          type: string
          example: workspace-api
        questdb:
          type: object
          properties:
            status:
              type: string
              example: connected
            latencyMs:
              type: number
        dbStrategy:
          type: string
          enum: [questdb, lowdb]
          example: questdb
          description: Current database strategy being used
        timestamp:
          type: string
          format: date-time
      required:
        - status
        - service
        - dbStrategy
        - timestamp
    ListItemsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        count:
          type: integer
          example: 2
        data:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      required:
        - success
        - count
        - data
    MutateItemResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Item created successfully
        data:
          $ref: '#/components/schemas/Item'
      required:
        - success
        - message
        - data
    DeleteItemResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Item deleted successfully
      required:
        - success
        - message
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Validation failed
        errors:
          type: array
          items:
            type: string
      required:
        - success
        - message
    Item:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: Implementar filtro avan√ßado
        description:
          type: string
        category:
          type: string
          enum:
            - documentacao
            - coleta-dados
            - banco-dados
            - analise-dados
            - gestao-riscos
            - dashboard
        priority:
          type: string
          enum:
            - low
            - medium
            - high
            - critical
        status:
          type: string
          enum:
            - new
            - review
            - in-progress
            - completed
            - rejected
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - title
        - description
        - category
        - priority
        - status
        - tags
        - createdAt
    CreateItemRequest:
      type: object
      required:
        - title
        - description
        - category
        - priority
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - documentacao
            - coleta-dados
            - banco-dados
            - analise-dados
            - gestao-riscos
            - dashboard
        priority:
          type: string
          enum:
            - low
            - medium
            - high
            - critical
        tags:
          type: array
          items:
            type: string
    UpdateItemRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - documentacao
            - coleta-dados
            - banco-dados
            - analise-dados
            - gestao-riscos
            - dashboard
        priority:
          type: string
          enum:
            - low
            - medium
            - high
            - critical
        status:
          type: string
          enum:
            - new
            - review
            - in-progress
            - completed
            - rejected
        tags:
          type: array
          items:
            type: string
