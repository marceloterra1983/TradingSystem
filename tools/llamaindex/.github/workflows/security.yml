name: Security Scan

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'Dockerfile*'
  pull_request:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'Dockerfile*'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pysa

      - name: Run Bandit
        run: |
          bandit -r . -f sarif -o results.sarif || true

      - name: Upload Bandit results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: bandit

      - name: Check dependencies with Safety
        run: |
          safety check
          safety check --full-report > safety-report.txt

      - name: Run PySA static analysis
        run: |
          pysa . --output pysa-results.txt || true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            results.sarif
            safety-report.txt
            pysa-results.txt

  docker-scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Build images for scanning
        run: |
          docker build -t llamaindex-ingestion:test -f Dockerfile.ingestion .
          docker build -t llamaindex-query:test -f Dockerfile.query .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'llamaindex-ingestion:test'
          format: 'sarif'
          output: 'trivy-ingestion-results.sarif'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'llamaindex-query:test'
          format: 'sarif'
          output: 'trivy-query-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-ingestion-results.sarif
          category: trivy-ingestion

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-query-results.sarif
          category: trivy-query

  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog-actions-scan@master
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4

      - name: Review dependencies
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

  license-check:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install pip-licenses
        run: pip install pip-licenses

      - name: Check licenses
        run: |
          pip-licenses --format=markdown > license-report.md
          pip-licenses --format=markdown --only-problems || true

      - name: Upload license report
        uses: actions/upload-artifact@v3
        with:
          name: license-report
          path: license-report.md