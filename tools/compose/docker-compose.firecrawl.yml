name: firecrawl

services:
  # Firecrawl Proxy - TradingSystem Gateway (Port 3600) - Full functionality
  firecrawl-proxy:
    image: "${IMG_TOOLS_FIRECRAWL_PROXY:-img-firecrawl-proxy}:${IMG_VERSION:-latest}"
    container_name: tools-firecrawl-proxy
    platform: linux/amd64
    build:
      context: ../../backend
      dockerfile: api/firecrawl-proxy/Dockerfile
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    ports:
      - "${FIRECRAWL_PROXY_PORT:-3600}:3600"
    environment:
      - PORT=3600
      - FIRECRAWL_API_URL=${FIRECRAWL_API_URL:-https://api.firecrawl.dev}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-your_api_key_here}
      - LOG_LEVEL=${FIRECRAWL_LOG_LEVEL:-info}
    volumes:
      - ../../backend/api/firecrawl-proxy/src:/app/src:ro
      - ../../backend/shared:/app/shared:ro
    restart: unless-stopped
    env_file:
      - ../../.env
    networks:
      - firecrawl_network
      - tradingsystem_backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:3600/health"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3
    labels:
      - "com.tradingsystem.stack=firecrawl"
      - "com.tradingsystem.service=firecrawl-proxy"

  # Firecrawl Core API (Port 3002) - Internal only
  firecrawl-api:
    image: "${IMG_FIRECRAWL_API:-nginx}:${IMG_VERSION:-alpine}"
    container_name: tools-firecrawl-api
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    ports:
      - "${FIRECRAWL_API_PORT:-3002}:80"
    restart: unless-stopped
    env_file:
      - ../../.env
    networks:
      - firecrawl_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  firecrawl-postgres:
    image: "${IMG_FIRECRAWL_POSTGRES:-postgres}:${IMG_VERSION:-15}"
    container_name: tools-firecrawl-postgres
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
    ports:
      - "${FIRECRAWL_POSTGRES_PORT:-5436}:5432"
    environment:
      POSTGRES_DB: firecrawl
      POSTGRES_USER: firecrawl
      POSTGRES_PASSWORD: ${FIRECRAWL_DB_PASSWORD:-firecrawl}
    restart: unless-stopped
    env_file:
      - ../../.env
    networks:
      - firecrawl_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U firecrawl -d firecrawl"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  firecrawl-redis:
    image: "${IMG_FIRECRAWL_REDIS:-redis}:${IMG_VERSION:-latest}"
    container_name: tools-firecrawl-redis
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    ports:
      - "${FIRECRAWL_REDIS_PORT:-6379}:6379"
    restart: unless-stopped
    env_file:
      - ../../.env
    networks:
      - firecrawl_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  firecrawl-playwright:
    image: "${IMG_FIRECRAWL_PLAYWRIGHT:-nginx}:${IMG_VERSION:-alpine}"
    container_name: tools-firecrawl-playwright
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
    ports:
      - "${FIRECRAWL_PLAYWRIGHT_PORT:-3003}:80"
    restart: unless-stopped
    env_file:
      - ../../.env
    networks:
      - firecrawl_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  firecrawl_network:
    driver: bridge
  tradingsystem_backend:
    external: true
