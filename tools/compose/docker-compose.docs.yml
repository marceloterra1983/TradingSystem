# ============================================================================
# TradingSystem - Documentation Services (2 Containers)
# ============================================================================
# Services:
#   - Documentation (Port 3400) - NGINX serving Docusaurus + specs (static)
#   - DocsAPI (Port 3401) - Express + FlexSearch + CRUD (dynamic API)
#
# Usage:
#   docker compose -f tools/compose/docker-compose.docs.yml up -d
#   docker compose -f tools/compose/docker-compose.docs.yml logs -f
#   docker compose -f tools/compose/docker-compose.docs.yml down
#
# Last Updated: 2025-10-26
# ============================================================================

name: documentation

services:
  # ============================================================================
  # Documentation - NGINX Static Server
  # Serves: Docusaurus (HTML/CSS/JS), OpenAPI/AsyncAPI specs (YAML/JSON)
  # ============================================================================
  documentation:
    container_name: docs-hub
    image: "${IMG_DOCS_HUB:-img-docs-hub}:${IMG_VERSION:-latest}"
    platform: linux/amd64
    env_file:
      - ../../.env
    build:
      context: ./documentation
      dockerfile: Dockerfile
    ports:
      - "${DOCS_PORT:-3400}:80"
    volumes:
      # Docusaurus build (static site)
      - ../../docs/build:/usr/share/nginx/html:ro
      # OpenAPI/AsyncAPI specifications
      - ../../frontend/dashboard/public/specs:/usr/share/nginx/html/specs:ro
    restart: unless-stopped
    networks:
      - tradingsystem_frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3
    labels:
      - "com.tradingsystem.stack=documentation"
      - "com.tradingsystem.service=docs-static"
      - "com.tradingsystem.type=frontend"
      - "com.tradingsystem.port=3400"

  # ============================================================================
  # DocsAPI - Documentation Management API
  # Provides: FlexSearch, CRUD operations, spec validation
  # ============================================================================
  docs-api:
    container_name: docs-api
    image: "${IMG_DOCS_API:-img-docs-api}:${IMG_VERSION:-latest}"
    platform: linux/amd64
    env_file:
      - ../../.env
    build:
      context: ../../backend
      dockerfile: api/documentation-api/Dockerfile
      target: development
    ports:
      - "${DOCS_API_PORT:-3401}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DOCS_DIR=/app/docs
      - LLAMAINDEX_DOCS_DIR=/app/docs/content
      - LLAMAINDEX_INGESTION_DOCS_DIR=/data/docs
      - DOCUMENTATION_DB_STRATEGY=none
      - LOG_LEVEL=info
      - QDRANT_URL=http://data-qdrant:6333
      - OLLAMA_BASE_URL=http://ollama:11434
      - LLAMAINDEX_QUERY_URL=http://tools-llamaindex-query:8000
      - LLAMAINDEX_INGESTION_URL=http://tools-llamaindex-ingestion:8000
    volumes:
      # Documentation source files
      - ../../docs:/app/docs:ro
      # Database (SQLite)
      - docs-api-data:/app/db
    restart: unless-stopped
    networks:
      - tradingsystem_backend
      - tradingsystem_frontend
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1); })"]
      interval: 30s
      timeout: 10s
      start_period: 15s
      retries: 3
    labels:
      - "com.tradingsystem.stack=documentation"
      - "com.tradingsystem.service=docs-api"
      - "com.tradingsystem.type=backend"
      - "com.tradingsystem.port=3401"

# ============================================================================
# Volumes
# ============================================================================
volumes:
  docs-api-data:
    driver: local

# ============================================================================
# Networks
# ============================================================================
networks:
  tradingsystem_backend:
    external: true
  tradingsystem_frontend:
    external: true
