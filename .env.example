# ==============================================================================
# üîê TRADINGSYSTEM - ENVIRONMENT TEMPLATE
# ==============================================================================
# Copy this file to `.env` and replace all CHANGE_ME placeholders
# See: docs/governance/ENVIRONMENT-CONFIGURATION.md for full guide
# ==============================================================================

# ==============================================================================
# üîë API KEYS & TOKENS (Configure First - MANDATORY)
# ==============================================================================

# OpenAI (LLM for LangGraph workflows)
# Get your key from: https://platform.openai.com/
OPENAI_API_KEY="CHANGE_ME_OPENAI_API_KEY"
OPENAI_BASE_URL=https://api.openai.com/v1

# LangSmith (Observability & Tracing)
# Get your key from: https://smith.langchain.com/
LANGSMITH_API_KEY="CHANGE_ME_LANGSMITH_KEY"
LANGSMITH_PROJECT="langgraph-dev"
LANGSMITH_TRACING="true"

# Anthropic (Alternative LLM - Claude - OPTIONAL)
# Get your key from: https://console.anthropic.com/
ANTHROPIC_API_KEY="CHANGE_ME_ANTHROPIC_KEY"

# Firecrawl (Web Scraping Service - OPTIONAL)
# Get your key from: https://www.firecrawl.dev/
FIRECRAWL_API_KEY="CHANGE_ME_FIRECRAWL_KEY"

# GitHub Token (for repository access - OPTIONAL)
# Get from: https://github.com/settings/tokens
GITHUB_TOKEN=CHANGE_ME_GITHUB_TOKEN

# Telegram Bot Tokens (OPTIONAL - for TP Capital integration)
TELEGRAM_INGESTION_BOT_TOKEN=CHANGE_ME_TELEGRAM_BOT_TOKEN
TELEGRAM_FORWARDER_BOT_TOKEN=CHANGE_ME_FORWARDER_BOT_TOKEN
TELEGRAM_BOT_TOKEN=CHANGE_ME_TELEGRAM_BOT_TOKEN
TELEGRAM_SOURCE_CHANNEL_IDS=-1001234567890
TELEGRAM_DESTINATION_CHANNEL_ID=-1001234567890
TELEGRAM_MODE=polling

# Telegram Gateway API (for telegram-gateway service)
# Get API credentials from: https://my.telegram.org/apps
TELEGRAM_API_ID=CHANGE_ME_TELEGRAM_API_ID
TELEGRAM_API_HASH=CHANGE_ME_TELEGRAM_API_HASH
TELEGRAM_PHONE_NUMBER=+5500000000000
TELEGRAM_SESSION=CHANGE_ME_AUTO_GENERATED_AFTER_AUTH

# Slack Webhook (for notifications - OPTIONAL)
SLACK_WEBHOOK_URL=

# Sentry (Error Monitoring - OPTIONAL)
SENTRY_AUTH_TOKEN="CHANGE_ME_SENTRY_TOKEN"


# ==============================================================================
# üîí DATABASE PASSWORDS (Auto-generated by setup script)
# ==============================================================================
# Run: bash scripts/env/setup-env.sh to generate secure passwords

# TimescaleDB Main Database
TIMESCALE_POSTGRES_PASSWORD="CHANGE_ME_AUTO_GENERATED"

# Application-Specific Database Users
APP_DOCUMENTATION_DB_PASSWORD="CHANGE_ME_AUTO_GENERATED"
LANGGRAPH_POSTGRES_PASSWORD="CHANGE_ME_AUTO_GENERATED"
FIRECRAWL_DB_PASSWORD="CHANGE_ME_AUTO_GENERATED"

# Application Services
REDIS_PASSWORD="CHANGE_ME_AUTO_GENERATED"


# ==============================================================================
# üîß APPLICATION SERVICES CONFIGURATION
# ==============================================================================

# TP Capital API (Trading Signals Integration)
TP_CAPITAL_PORT=4005
GATEWAY_SECRET_TOKEN="CHANGE_ME_AUTO_GENERATED"

# Shared API Security Token (used by multiple services)
API_SECRET_TOKEN="CHANGE_ME_AUTO_GENERATED"
VITE_TELEGRAM_GATEWAY_API_URL="http://localhost:4010"
VITE_TELEGRAM_GATEWAY_API_TOKEN="CHANGE_ME_AUTO_GENERATED"

# Telegram Gateway Database (for TP Capital signal polling)
GATEWAY_DATABASE_NAME=APPS-TELEGRAM-GATEWAY
GATEWAY_DATABASE_SCHEMA=telegram_gateway
GATEWAY_POLLING_INTERVAL_MS=5000
SIGNALS_CHANNEL_ID=-1001649127710
GATEWAY_BATCH_SIZE=100

# TimescaleDB Application Users
TIMESCALEDB_USER=timescale
TIMESCALEDB_PASSWORD="CHANGE_ME_AUTO_GENERATED"
TIMESCALEDB_HOST=timescaledb
TIMESCALEDB_PORT=5432
TIMESCALEDB_DATABASE=APPS-TPCAPITAL


# ==============================================================================
# üîê ADMIN CREDENTIALS
# ==============================================================================

# PgAdmin (Database Management UI)
PGADMIN_DEFAULT_EMAIL=admin@tradingsystem.local
PGADMIN_DEFAULT_PASSWORD=CHANGE_ME_PGADMIN_PASSWORD

# Grafana (Monitoring Dashboard)
GF_SECURITY_ADMIN_PASSWORD="CHANGE_ME_GRAFANA_PASSWORD"


# ==============================================================================
# üê≥ DOCKER IMAGES (Container Versions - DEFAULT: latest)
# ==============================================================================

IMG_VERSION=latest
IMG_DATA_TIMESCALEDB=timescale/timescaledb:latest-pg16
IMG_DATA_TIMESCALEDB_BACKUP=timescale/timescaledb:latest-pg16
IMG_DATA_TIMESCALEDB_EXPORTER=prometheuscommunity/postgres-exporter:latest
IMG_DATA_TIMESCALEDB_PGADMIN=dpage/pgadmin4:latest
IMG_DATA_TIMESCALEDB_PGWEB=sosedoff/pgweb:latest
IMG_DATA_TIMESCALEDB_ADMINER=adminer:latest
IMG_DATA_TIMESCALEDB_AZIMUTT=azimutt/azimutt:latest
IMG_DATA_POSTGRESS_LANGGRAPH=postgres:15
IMG_DATA_QDRANT=qdrant/qdrant:latest
IMG_DATA_QUESTDB=questdb/questdb:latest


# ==============================================================================
# ü§ñ LLM CONFIGURATION (DEFAULT: gpt-4o-mini)
# ==============================================================================

# Default Model Configuration
MODEL_NAME=gpt-4o-mini
MODEL_EMBEDDING_NAME=text-embedding-3-large

# Ollama (Local LLM - OPTIONAL)
OLLAMA_BASE_URL=http://localhost:11434
DOCS_AGENT_MODEL=llama3.1:8b
DOCS_AGENT_MAX_CONTEXT=20000

# Local Embeddings (Ollama + Qdrant)
# Embedding model must be available in your Ollama instance (e.g., `ollama pull nomic-embed-text`)
LLAMAINDEX_QUERY_URL=http://localhost:8202
LLAMAINDEX_INGESTION_URL=http://localhost:8201
OLLAMA_EMBEDDING_MODEL=nomic-embed-text
OLLAMA_MODEL=llama3
# Qdrant vector database HTTP endpoint
QDRANT_URL=http://localhost:6333
# Collection name used to store documentation chunks
QDRANT_COLLECTION=documentation

# GPU Coordination (LlamaIndex & Ollama)
# Force all LlamaIndex/Ollama calls to use the GPU and serialize workloads.
LLAMAINDEX_FORCE_GPU=true
LLAMAINDEX_GPU_NUM=1
LLAMAINDEX_GPU_MAX_CONCURRENCY=1
LLAMAINDEX_GPU_COOLDOWN_SECONDS=0
LLAMAINDEX_GPU_WAIT_LOG_THRESHOLD=0.5
LLAMAINDEX_GPU_USE_FILE_LOCK=true
LLAMAINDEX_GPU_LOCK_PATH=/tmp/llamaindex-gpu.lock
LLAMAINDEX_GPU_LOCK_POLL_SECONDS=0.25
# Optional fine-tuning knobs (fallback to Ollama_* equivalents when unset)
# LLAMAINDEX_GPU_LAYERS=
# LLAMAINDEX_GPU_SPLIT=
# LLAMAINDEX_GPU_MAIN=
# LLAMAINDEX_GPU_LOW_VRAM=

# Optional: control chunking during indexing
DOCS_CHUNK_SIZE=800
DOCS_CHUNK_OVERLAP=120


# ==============================================================================
# üåê FIRECRAWL INTEGRATIONS (Optional - Leave empty if not used)
# ==============================================================================

FIRECRAWL_SUPABASE_URL=
FIRECRAWL_SUPABASE_SERVICE_TOKEN=
FIRECRAWL_SUPABASE_ANON_TOKEN=
FIRECRAWL_SERPER_API_KEY=
FIRECRAWL_SEARCHAPI_API_KEY=
FIRECRAWL_TEST_API_KEY=
FIRECRAWL_SLACK_WEBHOOK_URL=
FIRECRAWL_POSTHOG_API_KEY=
FIRECRAWL_POSTHOG_HOST=https://app.posthog.com
FIRECRAWL_SEARXNG_ENDPOINT=
FIRECRAWL_SEARXNG_ENGINES=
FIRECRAWL_SEARXNG_CATEGORIES=
FIRECRAWL_SELF_HOSTED_WEBHOOK_URL=
FIRECRAWL_PROXY_SERVER=
FIRECRAWL_PROXY_USERNAME=
FIRECRAWL_PROXY_PASSWORD=


# ==============================================================================
# ==============================================================================

# API Configuration

# Database Configuration

# Scheduler

# Export

# Logging & Monitoring

# CORS

# Dashboard Documentation Configuration
VITE_PRD_BASE_URL=http://localhost:3205
VITE_USE_DOCS_V2_PRD=false
VITE_AGNO_AGENTS_URL=http://localhost:8201


# ==============================================================================
# üîå MCP CONFIGURATION (Filesystem, GitHub, OpenAPI, Docker, Postgres)
# ==============================================================================

# Filesystem MCP root (absolute or relative). For CLI configs use absolute path.
MCP_FS_ROOT=.

# GitHub MCP (set repo or org; token already defined as GITHUB_TOKEN)
# Example: owner/repo (e.g., TradingSystem/TradingSystem)
MCP_GITHUB_REPO=marceloterra1983/TradingSystem
# Optional: set an org to browse all repos (if supported by your server)
MCP_GITHUB_ORG=

# Docker/Compose MCP
COMPOSE_PROJECT_NAME=tradingsystem
DOCKER_HOST=

# Postgres MCP (frontend apps DB cluster). Use read-only credentials when possible.
# Example: postgres://user:pass@localhost:5444/frontend_apps?sslmode=disable
MCP_POSTGRES_URL=postgres://frontend_ro:CHANGE_ME_RO_PASS@localhost:5433/trading?sslmode=disable

# OpenAPI MCP specs (served from repo files)
MCP_OPENAPI_SPECS=docs/static/specs/workspace.openapi.yaml,docs/static/specs/documentation-api.openapi.yaml,docs/static/specs/tp-capital.openapi.yaml

# Read-only DB user (created by Compose init script on first DB start)
FRONTEND_APPS_DB_READONLY_USER=frontend_ro
FRONTEND_APPS_DB_READONLY_PASS=CHANGE_ME_RO_PASS


# ==============================================================================
# üìù QUICK SETUP GUIDE
# ==============================================================================
# 
# 1. Copy this file:
#    cp .env.example .env
#
# 2. Run setup script (generates secure passwords):
#    bash scripts/env/setup-env.sh
#
# 3. Configure mandatory API keys:
#    - OPENAI_API_KEY (required for LLM features)
#    - LANGSMITH_API_KEY (recommended for tracing)
#
# 4. Validate configuration:
#    bash scripts/env/validate-env.sh
#
# 5. Start services:
#    bash scripts/startup/start-dashboard-stack.sh
#
# ==============================================================================
# üìö DOCUMENTATION
# ==============================================================================
#
# Full Configuration Guide:
# - docs/governance/ENVIRONMENT-CONFIGURATION.md
#
# Setup Scripts:
# - scripts/env/setup-env.sh       (interactive setup)
# - scripts/env/validate-env.sh    (validation)
# - scripts/env/migrate-env.sh     (migration from old structure)
#
# Security Best Practices:
# - Never commit .env to git (.gitignore is configured)
# - Rotate passwords every 90 days
# - Use strong passwords (minimum 20 characters)
# - Keep API keys secure
# - Use environment-specific files (.env.local, .env.production)
#
# ==============================================================================
